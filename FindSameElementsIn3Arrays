package java8prog;

public class ReverseString {

	public int[] sortArray(int[] arr) {

		for (int i = 0; i < arr.length; i++) {
			for (int j = i + 1; j < arr.length; j++) {
				if (arr[i] > arr[j]) {
					int temp = arr[i];
					arr[i] = arr[j];
					arr[j] = temp;
				}
			}
		}
		return arr;

	}

	public void print(int[] arr1, int[] arr2, int[] arr3) {
		for(int i=0;i<arr1.length;i++) {
			for(int j=0;j<arr2.length;j++) {
				for(int k=0;k<arr3.length;k++) {
					if(arr1[i]==arr2[j] && arr2[j]==arr3[k]) {
						System.out.print(" "+arr1[i]);
					}
				}
			}
		}
		
	}
	
	public void printDuplicatesFromArrays(int[] arr1, int[] arr2, int[] arr3) {
		

		if (arr1.length > arr2.length && arr2.length > arr3.length) {
			print(arr1,arr2,arr3);
		} else if (arr1.length > arr3.length && arr3.length > arr2.length) {
			print(arr1,arr3,arr2);
		} else if (arr2.length > arr3.length && arr3.length > arr1.length) {
			print(arr2,arr3,arr1);
		} else if (arr2.length > arr1.length && arr1.length > arr3.length) {
			print(arr2,arr1,arr3);
		} else if (arr3.length > arr1.length && arr1.length > arr2.length) {
			print(arr3,arr1,arr2);
		} else if (arr3.length > arr2.length && arr2.length > arr1.length) {
			print(arr3,arr2,arr3);
		}else if( arr1.length == arr2.length && arr2.length == arr3.length){
			print(arr1,arr2,arr3);
		}else if( arr1.length > arr2.length && arr2.length == arr3.length) {
			print(arr1,arr2,arr3);
		}else if( arr1.length == arr2.length && arr2.length > arr3.length) {
			print(arr3,arr2,arr1);
		}else if( arr2.length > arr1.length && arr1.length == arr3.length) {
			print(arr2,arr1,arr3);
		}else if( arr2.length == arr3.length && arr2.length > arr1.length) {
			print(arr2,arr3,arr1);
		}else if( arr1.length == arr3.length && arr1.length > arr2.length) {
			print(arr1,arr3,arr2);
		}
	}

	public static void main(String[] args) {
		ReverseString rs = new ReverseString();
		int[] arr1 = { 2,7,9,3,6,7 };
		int[] arr2 = { 2,3,6,1,9};
		int[] arr3 = { 6,1,2,8,3,6 };

		arr1 = rs.sortArray(arr1);
		arr2 = rs.sortArray(arr2);
		arr3 = rs.sortArray(arr3);
  
		rs.printDuplicatesFromArrays(arr1,arr2,arr3);
	}
}
